
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Ключ.Пустая() Тогда
		ОбновитьСтатус();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДокументВнутреннееПотреблениеПриИзменении(Элемент)
	ОбновитьСтатус();
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Объект.Комментарий, ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура СоздатьДокумент(Команда)
	
	ТекстВопроса = "Создать документ ""Внутреннее потребление"" на основании данных, указанных в этом документе?";
	Если Не Ждать ПоложительныйОтветНаВопрос(ТекстВопроса) Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьДокументВнутреннееПотребление();
	
	Если ЗначениеЗаполнено(Объект.ДокументВнутреннееПотребление) Тогда
		ПараметрыФормы = Новый Структура("Ключ", Объект.ДокументВнутреннееПотребление);
		ОткрытьФорму("Документ.ВнутреннееПотребление.Форма.ФормаДокумента"
		, ПараметрыФормы
		, ЭтотОбъект
		, УникальныйИдентификатор);
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("РежимЗаписи",      РежимЗаписиДокумента.Запись);
	ПараметрыОповещения.Вставить("ЕстьРаспоряжение", Ложь);
	
	Оповестить("Запись_ВнутреннееПотребление", ПараметрыОповещения);
	
	ОбновитьСтатус();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Асинх Функция ПоложительныйОтветНаВопрос(ТекстВопроса)
	Ответ = Ждать ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Возврат Ответ = КодВозвратаДиалога.Да;
КонецФункции

&НаСервере
Процедура СоздатьДокументВнутреннееПотребление()
	НовыйДокумент = Документы.ВнутреннееПотребление.СоздатьДокумент();
	НовыйДокумент.Дата = ТекущаяДата();
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить("ВидЦены");
	МассивПараметров.Добавить("НаправлениеДеятельности");
	МассивПараметров.Добавить("Организация");
	МассивПараметров.Добавить("Подразделение");
	МассивПараметров.Добавить("ПотреблениеДляДеятельности");
	МассивПараметров.Добавить("Склад");
	МассивПараметров.Добавить("ХозяйственнаяОперация");	
	
	ЗаполнитьЗначенияСвойств(НовыйДокумент, Объект, СтрСоединить(МассивПараметров, ","));
	НовыйДокумент.Ответственный = Пользователи.ТекущийПользователь();
	НовыйДокумент.Комментарий = "Создано на основании """ + Объект.Ссылка + """";
	
	Для Каждого СтрокаТЧ Из Объект.Товары Цикл
		НоваяСтрока = НовыйДокумент.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
		НоваяСтрока.КоличествоУпаковок = СтрокаТЧ.Количество;
	КонецЦикла;
	
	НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
	
	Объект.ДокументВнутреннееПотребление = НовыйДокумент.Ссылка;
	
	Записать();
	
	ОбновитьСтатус();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатус()
	
	Если Не ЗначениеЗаполнено(Объект.ДокументВнутреннееПотребление) Тогда
		Статус = Перечисления.УТЗ_ПЛ_СтатусыСписанияТоплива.ВнутреннееПотреблениеНеСоздано;
	Иначе
		ДокументПроведен = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДокументВнутреннееПотребление
																	, "Проведен"
																	, Истина);
		Если ТипЗнч(ДокументПроведен) = Тип("Булево") Тогда
			Если ДокументПроведен Тогда
				Статус = Перечисления.УТЗ_ПЛ_СтатусыСписанияТоплива.ВнутреннееПотреблениеПроведено;
			Иначе
				Статус = Перечисления.УТЗ_ПЛ_СтатусыСписанияТоплива.ВнутреннееПотреблениеСоздано;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры





#КонецОбласти