#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");

КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Данные.Номер, Истина, Истина);
	Представление = СтрШаблон("Путевой лист №%1 от %2", НомерНаПечать, Формат(Данные.Дата, "ДФ=dd.MM.yy"));

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Заказ покупателя
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_ПутевойЛистЛегковогоАвтомобиля";
	КомандаПечати.Представление = НСтр("ru = 'Путевой лист легкового автомобиля (УТЗ)'");
	КомандаПечати.Порядок = 5;

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПФ_MXL_ПутевойЛистГрузовогоАвтомобиля";
	КомандаПечати.Представление = НСтр("ru = 'Путевой лист грузового автомобиля (УТЗ)'");
	КомандаПечати.Порядок = 10;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм,
		"ПФ_MXL_ПутевойЛистЛегковогоАвтомобиля");
	Если ПечатнаяФорма <> Неопределено Тогда
		ПечатнаяФорма.ТабличныйДокумент = ПечатьЛегковогоПутевогоЛистаУТЗ(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Путевой лист легкового автомобиля (УТЗ)'");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.УТЗ_ПЛ_ПутевойЛист.ПФ_MXL_ПутевойЛистЛегковогоАвтомобиля";
	КонецЕсли;

	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм,
		"ПФ_MXL_ПутевойЛистГрузовогоАвтомобиля");
	Если ПечатнаяФорма <> Неопределено Тогда
		ПечатнаяФорма.ТабличныйДокумент = ПечатьГрузовогоПутевогоЛистаУТЗ(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru='Путевой лист грузового автомобиля (УТЗ)'", "ru");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.УТЗ_ПЛ_ПутевойЛист.ПФ_MXL_ПутевойЛистГрузовогоАвтомобиля";
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПечатьЛегковогоПутевогоЛистаУТЗ

Функция ПечатьЛегковогоПутевогоЛистаУТЗ(МассивОбъектов, ОбъектыПечати)

	ТабДок = Новый ТабличныйДокумент();
	ТабДок.ОтображатьГруппировки = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.АвтоМасштаб = Истина;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.УТЗ_ПЛ_ПутевойЛист.ПФ_MXL_ПутевойЛистЛегковогоАвтомобиля");

	ДанныеДокументов = ДанныеДокументовДляПечатиЛегковогоПутевогоЛиста(МассивОбъектов);

	ПервыйДокумент = Истина;

	Пока ДанныеДокументов.Следующий() Цикл

		Если Не ПервыйДокумент Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;

		ВывестиЗаголовокЛегковогоПутевогоЛиста(ДанныеДокументов, ТабДок, Макет);

		ВывестиТабличнуюЧастьЛегковогоПутевогоЛиста(ДанныеДокументов, ТабДок, Макет);

		ВывестиПодвалЛегковогоПутевогоЛиста(ДанныеДокументов, ТабДок, Макет);

	КонецЦикла;

	Возврат ТабДок;

КонецФункции

Функция ДанныеДокументовДляПечатиЛегковогоПутевогоЛиста(МассивОбъектов)

	Организация = УТЗ_ПЛ_Организации.СсылкаОрганизацииУТЗ();
	АдресОрганизации = АдресОрганизации(Организация);

	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УТЗ_ПЛ_ПутевойЛист.Дата КАК ДатаПутевогоЛиста,
	|	УТЗ_ПЛ_ПутевойЛист.Номер КАК Номер,
	|	УТЗ_ПЛ_ПутевойЛист.ДатаВремяУбытия КАК ДатаНачала,
	|	УТЗ_ПЛ_ПутевойЛист.ДатаВремяПрибытия КАК ДатаОкончания,
	|	УТЗ_ПЛ_ПутевойЛист.Организация КАК Организация,
	|	&АдресОрганизации КАК АдресОрганизации,
	|	УТЗ_ПЛ_ПутевойЛист.ОсновнойАвтотранспорт.ТипАвтотранспорта КАК ТипАвтотранспорта,
	|	УТЗ_ПЛ_ПутевойЛист.ОсновнойАвтотранспорт.Модель КАК МодельАвтотранспорта,
	|	УТЗ_ПЛ_ПутевойЛист.ОсновнойАвтотранспорт.Модель.Марка КАК МаркаАвтотранспорта,
	|	УТЗ_ПЛ_ПутевойЛист.ОсновнойАвтотранспорт.ГосНомер КАК Госномер,
	|	УТЗ_ПЛ_ПутевойЛист.ОсновнойАвтотранспорт.ГаражныйНомер КАК ГаражныйНомер,
	|	УТЗ_ПЛ_ПутевойЛист.ОсновнойАвтотранспорт.СерияПТС КАК СерияПТС,
	|	УТЗ_ПЛ_ПутевойЛист.ОсновнойАвтотранспорт.НомерПТС КАК НомерПТС,
	|	УТЗ_ПЛ_ПутевойЛист.ВидСообщения КАК ВидСообщения,
	|	УТЗ_ПЛ_ПутевойЛист.Водитель КАК Водитель,
	|	УТЗ_ПЛ_ПутевойЛист.Водитель.ФизическоеЛицо КАК ВодительФизическоеЛицо,
	|	УТЗ_ПЛ_ПутевойЛист.Водитель.КлассВодителя КАК КлассВодителя,
	|	УТЗ_ПЛ_ПутевойЛист.Водитель.ТабельныйНомер КАК ТабНом,
	|	УТЗ_ПЛ_ПутевойЛист.Водитель.ФамилияИО КАК ФамилияИОВодителя,
	|	УТЗ_ПЛ_ПутевойЛист.Водитель.ФизическоеЛицо.ФИО КАК ФИОВодителя,
	|	УТЗ_ПЛ_ПутевойЛист.Водитель.СНИЛС КАК СНИЛС,
	|	УТЗ_ПЛ_ПутевойЛист.ОсновнойАвтотранспорт.Топливо КАК Топливо,
	|	УТЗ_ПЛ_ПутевойЛист.ОстатокТопливаПриУбытии КАК ОстатокГСМПриВыезде,
	|	УТЗ_ПЛ_ПутевойЛист.РасходТопливаПлан КАК РасходНормативный,
	|	УТЗ_ПЛ_ПутевойЛист.Медработник КАК Медработник,
	|	УТЗ_ПЛ_ПутевойЛист.МеханикСдал КАК МеханикСдал,
	|	УТЗ_ПЛ_ПутевойЛист.МеханикПринял КАК МеханикПринял,
	|	УТЗ_ПЛ_ПутевойЛист.ДиспетчерСдал КАК ДиспетчерСдал,
	|	УТЗ_ПЛ_ПутевойЛист.ДиспетчерПринял КАК ДиспетчерПринял,
	|	УТЗ_ПЛ_ПутевойЛист.Маршрут.(
	|		НомерСтроки КАК НомерПункта,
	|		ВремяВПути КАК ВремяВПути,
	|		ДатаВремяПрибытия КАК ВремяПрибытия,
	|		ДатаВремяУбытия КАК ВремяОтправления,
	|		ПРЕДСТАВЛЕНИЕ(УТЗ_ПЛ_ПутевойЛист.Маршрут.ПодразделениеЗаявитель) КАК ПодразделениеЗаявитель,
	|		ПунктПрибытия.Адрес КАК АдресПунктаНазначения,
	|		ПунктУбытия.Адрес КАК АдресПунктаОтправления,
	|		Расстояние КАК Расстояние,
	|		НулевойПробег КАК НулевойПробег,
	|		ДатаВремяУбытия КАК ДатаВремяУбытия,
	|		ДатаВремяПрибытия КАК ДатаВремяПрибытия
	|	) КАК Маршрут,
	|	УТЗ_ПЛ_ПутевойЛист.ПробегПриУбытии КАК ПробегПриВыезде,
	|	УТЗ_ПЛ_ПутевойЛист.МеханикСдал.Фамилия + "" "" + УТЗ_ПЛ_ПутевойЛист.МеханикСдал.Инициалы КАК ФамилияИОМеханикаВыезд,
	|	УТЗ_ПЛ_ПутевойЛист.МеханикПринял.Фамилия + "" "" + УТЗ_ПЛ_ПутевойЛист.МеханикПринял.Инициалы КАК ФамилияИОМеханикаВозвращение,
	|	УТЗ_ПЛ_ПутевойЛист.ДиспетчерСдал.Фамилия + "" "" + УТЗ_ПЛ_ПутевойЛист.ДиспетчерСдал.Инициалы КАК ФамилияИОДиспетчераВыезд,
	|	УТЗ_ПЛ_ПутевойЛист.ДиспетчерПринял.Фамилия + "" "" + УТЗ_ПЛ_ПутевойЛист.ДиспетчерПринял.Инициалы КАК ФамилияИОДиспетчераВозвращение,
	|	УТЗ_ПЛ_ПутевойЛист.Медработник.Фамилия + "" "" + УТЗ_ПЛ_ПутевойЛист.Медработник.Инициалы КАК ФамилияИОМедработника
	|ИЗ
	|	Документ.УТЗ_ПЛ_ПутевойЛист КАК УТЗ_ПЛ_ПутевойЛист
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УТЗ_ПЛ_ДокументыВодителей.СрезПоследних(, ) КАК УТЗ_ПЛ_ДокументыВодителейСрезПоследних
	|		ПО УТЗ_ПЛ_ПутевойЛист.Водитель = УТЗ_ПЛ_ДокументыВодителейСрезПоследних.Водитель
	|			И (УТЗ_ПЛ_ДокументыВодителейСрезПоследних.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.УТЗ_ПЛ_ВидыДокументовВодителя.ВодительскоеУдостоверение))
	|ГДЕ
	|	УТЗ_ПЛ_ПутевойЛист.Ссылка В(&МассивСсылок)";

	Запрос.УстановитьПараметр("МассивСсылок", МассивОбъектов);
	Запрос.УстановитьПараметр("АдресОрганизации", АдресОрганизации);

	Выборка = Запрос.Выполнить().Выбрать();

	Возврат Выборка;

КонецФункции

Процедура ВывестиЗаголовокЛегковогоПутевогоЛиста(ДанныеДокументов, ТабДок, Макет)

	ОбластьЗаголовок = Макет.ПолучитьОбласть("ОбластьЗаголовок");
	ОбластьЗаголовок.Параметры.Заполнить(ДанныеДокументов);

	Номер = "№ " + ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер, Истина, Истина);

	СрокДействия = "";

	Если ЗначениеЗаполнено(ДанныеДокументов.ДатаНачала) Тогда

		Если НачалоДня(ДанныеДокументов.ДатаНачала) = НачалоДня(ДанныеДокументов.ДатаОкончания) Тогда
			СрокДействия = "в течение " + Формат(ДанныеДокументов.ДатаНачала, "ДФ=dd.MM.yyyy");
		ИначеЕсли НачалоДня(ДанныеДокументов.ДатаНачала) < НачалоДня(ДанныеДокументов.ДатаОкончания) Тогда
			СрокДействия = СтрШаблон("с %1 по %2", Формат(ДанныеДокументов.ДатаНачала, "ДФ=dd.MM.yyyy"), Формат(
				ДанныеДокументов.ДатаОкончания, "ДФ=dd.MM.yyyy"));
		КонецЕсли;

	КонецЕсли;

	ОбластьЗаголовок.Параметры.СрокДействия = СрокДействия;
	ОбластьЗаголовок.Параметры.НомерПутевогоЛиста = Номер;

	СведенияВУ = ДанныеВУВодителя(ДанныеДокументов.Водитель, ДанныеДокументов.ДатаПутевогоЛиста);

	ОбластьЗаголовок.Параметры.Заполнить(СведенияВУ);

	СведенияПервогоПункта = ВРаспоряжениеПодразделенияАдресПервойПодачи(ДанныеДокументов);

	ОбластьЗаголовок.Параметры.Заполнить(СведенияПервогоПункта);

	ТабДок.Вывести(ОбластьЗаголовок);

КонецПроцедуры

Процедура ВывестиТабличнуюЧастьЛегковогоПутевогоЛиста(ДанныеДокументов, ТабДок, Макет)

	ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапкаТаблицы");
	ТабДок.Вывести(ОбластьШапка);

	ВыборкаМаршрут = ДанныеДокументов.Маршрут.Выбрать();

	ВыведеноСтрок = 0;

	Пока ВыборкаМаршрут.Следующий() Цикл

		Область = Макет.ПолучитьОбласть("ОбластьСтрокаТаблицы");

		Область.Параметры.Заполнить(ВыборкаМаршрут);

		ТабДок.Вывести(Область);

		ВыведеноСтрок = ВыведеноСтрок + 1;

	КонецЦикла;

	Для Сч = ВыведеноСтрок По 6 Цикл

		Область = Макет.ПолучитьОбласть("ОбластьСтрокаТаблицыПустая");

		ТабДок.Вывести(Область);

	КонецЦикла;

КонецПроцедуры

Процедура ВывестиПодвалЛегковогоПутевогоЛиста(ДанныеДокументов, ТабДок, Макет)

	Область = Макет.ПолучитьОбласть("ОбластьПодвал");
	Область.Параметры.Заполнить(ДанныеДокументов);
	ТабДок.Вывести(Область);

КонецПроцедуры

Функция ВРаспоряжениеПодразделенияАдресПервойПодачи(ДанныеДокументов)

	ВыборкаМаршрут = ДанныеДокументов.Маршрут.Выбрать();

	СтруктураОтвета = Новый Структура();
	СтруктураОтвета.Вставить("ВРаспоряжение", "");
	СтруктураОтвета.Вставить("АдресПервойПодачи", "");
	СтруктураОтвета.Вставить("ДатаВремяВыезда", "");

	Пока ВыборкаМаршрут.Следующий() Цикл

		Если ЗначениеЗаполнено(ВыборкаМаршрут.ДатаВремяУбытия) И Не ЗначениеЗаполнено(СтруктураОтвета.ДатаВремяВыезда) Тогда
			СтруктураОтвета.ДатаВремяВыезда = Формат(ВыборкаМаршрут.ДатаВремяУбытия, "ДФ='dd.MM.yyyy ЧЧ:мм'");
		КонецЕсли;

		Если ВыборкаМаршрут.НулевойПробег Тогда
			Продолжить;
		КонецЕсли;

		Если ЗначениеЗаполнено(ВыборкаМаршрут.ПодразделениеЗаявитель) Тогда
			СтрокаКСклонению = ВыборкаМаршрут.ПодразделениеЗаявитель;
			Падеж = 2; //Родительный

			СтруктураОтвета.ВРаспоряжение = СклонениеПредставленийОбъектов.ПросклонятьПредставление(СтрокаКСклонению,
				Падеж);
		КонецЕсли;

		Если ЗначениеЗаполнено(ВыборкаМаршрут.АдресПунктаОтправления) Тогда
			СтруктураОтвета.АдресПервойПодачи = ВыборкаМаршрут.АдресПунктаОтправления;
		КонецЕсли;

		Прервать;

	КонецЦикла;

	Возврат СтруктураОтвета;

КонецФункции

#КонецОбласти

#Область ПечатьГрузовогоПутевогоЛистаУТЗ

Функция ПечатьГрузовогоПутевогоЛистаУТЗ(МассивОбъектов, ОбъектыПечати)

	ТабДок = Новый ТабличныйДокумент();
	ТабДок.ОтображатьГруппировки = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.Защита = Ложь;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ПолеСверху = 5;
	ТабДок.ПолеСнизу = 5;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	ДанныеДокументов = ДанныеДокументовДляПечатиГрузовогоПутевогоЛиста(МассивОбъектов);

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.УТЗ_ПЛ_ПутевойЛист.ПФ_MXL_ПутевойЛистГрузовогоАвтомобиля");

	ПервыйДокумент = Истина;

	Пока ДанныеДокументов.Следующий() Цикл

		Если Не ПервыйДокумент Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;

		РасчетныеПараметры = Неопределено; // для использования рассчитанных параметров в других процедурах
		ВывестиЛицевуюЧастьГрузовогоПутевогоЛиста(ДанныеДокументов, ТабДок, Макет, РасчетныеПараметры);

		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();

		ВывестиОборотнуюЧастьГрузовогоПутевогоЛиста(ДанныеДокументов, ТабДок, Макет, РасчетныеПараметры);

	КонецЦикла;

	Возврат ТабДок;

КонецФункции

Функция ДанныеДокументовДляПечатиГрузовогоПутевогоЛиста(МассивОбъектов)

	Запрос = Новый Запрос();

	Запрос.Текст =
	"ВЫБРАТЬ
	|	УТЗ_ПЛ_ПутевойЛист.Дата КАК Дата,
	|	УТЗ_ПЛ_ПутевойЛист.Номер КАК Номер,
	|	УТЗ_ПЛ_ПутевойЛист.ДатаВремяУбытия КАК ДатаВремяУбытия,
	|	УТЗ_ПЛ_ПутевойЛист.ДатаВремяПрибытия КАК ДатаВремяПрибытия,
	|	УТЗ_ПЛ_ПутевойЛист.Организация КАК ОрганизацияСсылка,
	|	ПРЕДСТАВЛЕНИЕ(УТЗ_ПЛ_ПутевойЛист.Организация) КАК Организация,
	|	УТЗ_ПЛ_ПутевойЛист.ВидСообщения КАК ВидСообщения,
	|	УТЗ_ПЛ_ПутевойЛист.ОсновнойАвтотранспорт КАК ОсновнойАвтотранспорт,
	|	ПРЕДСТАВЛЕНИЕ(УТЗ_ПЛ_ПутевойЛист.ОсновнойАвтотранспорт.ТипАвтотранспорта) КАК ТипАвтотранспорта,
	|	ПРЕДСТАВЛЕНИЕ(УТЗ_ПЛ_ПутевойЛист.ОсновнойАвтотранспорт.Модель) КАК МаркаМодельАвтомобиля,
	|	УТЗ_ПЛ_ПутевойЛист.ОсновнойАвтотранспорт.ГосНомер КАК Госномер,
	|	""серия "" + УТЗ_ПЛ_ПутевойЛист.ОсновнойАвтотранспорт.СерияПТС + "" №"" + УТЗ_ПЛ_ПутевойЛист.ОсновнойАвтотранспорт.НомерПТС КАК СерияНомерПТС,
	|	УТЗ_ПЛ_ПутевойЛист.ОсновнойАвтотранспорт.ГаражныйНомер КАК ГаражныйНомер,
	|	УТЗ_ПЛ_ПутевойЛист.Водитель.ФизическоеЛицо.Фамилия + "" "" + УТЗ_ПЛ_ПутевойЛист.Водитель.ФизическоеЛицо.Инициалы КАК ФамилияИОВодителя,
	|	УТЗ_ПЛ_ПутевойЛист.Водитель.ФизическоеЛицо.ФИО КАК ФИОВодителя,
	|	УТЗ_ПЛ_ПутевойЛист.Водитель.СНИЛС КАК СНИЛС,
	|	УТЗ_ПЛ_ПутевойЛист.Водитель.ТабельныйНомер КАК ТабНом,
	|	УТЗ_ПЛ_ПутевойЛист.Водитель КАК Водитель,
	|	ПРЕДСТАВЛЕНИЕ(УТЗ_ПЛ_ПутевойЛист.Водитель.КлассВодителя) КАК КлассВодителя,
	|	УТЗ_ПЛ_ПутевойЛист.ПробегПриУбытии КАК ПробегПриУбытии,
	|	ПРЕДСТАВЛЕНИЕ(УТЗ_ПЛ_ПутевойЛист.ОсновнойАвтотранспорт.Топливо) КАК ГСМАвтотранспорта,
	|	УТЗ_ПЛ_ПутевойЛист.ОстатокТопливаПриУбытии КАК ОстатокГСМПриУбытии,
	|	УТЗ_ПЛ_ПутевойЛист.МеханикСдал.Фамилия + "" "" + УТЗ_ПЛ_ПутевойЛист.МеханикСдал.Инициалы КАК ФамилияИОМеханикаУбытие,
	|	УТЗ_ПЛ_ПутевойЛист.МеханикПринял.Фамилия + "" "" + УТЗ_ПЛ_ПутевойЛист.МеханикПринял.Инициалы КАК ФамилияИОМеханикаПрибытие,
	|	УТЗ_ПЛ_ПутевойЛист.ДиспетчерСдал.Фамилия + "" "" + УТЗ_ПЛ_ПутевойЛист.ДиспетчерСдал.Инициалы КАК ФамилияИОДиспетчераУбытие,
	|	УТЗ_ПЛ_ПутевойЛист.ДиспетчерПринял.Фамилия + "" "" + УТЗ_ПЛ_ПутевойЛист.ДиспетчерПринял.Инициалы КАК ФамилияИОДиспетчераПрибытие,
	|	УТЗ_ПЛ_ПутевойЛист.Маршрут.(
	|		ВремяВПути КАК ВремяВПути,
	|		ВремяОжиданияНаПунктеПрибытия КАК ВремяОжиданияНаПунктеПрибытия,
	|		ДатаВремяПрибытия КАК ДатаВремяПрибытия,
	|		ДатаВремяУбытия КАК ДатаВремяУбытия,
	|		ПодразделениеЗаявитель КАК ПодразделениеЗаявительСсылка,
	|		ПРЕДСТАВЛЕНИЕ(УТЗ_ПЛ_ПутевойЛист.Маршрут.ПодразделениеЗаявитель) КАК ПодразделениеЗаявитель,
	|		Прицеп КАК Прицеп,
	|		ПробегПриПрибытии КАК ПробегПриПрибытии,
	|		ПробегПриУбытии КАК ПробегПриУбытии,
	|		ПунктПрибытия КАК ПунктПрибытия,
	|		ПунктУбытия КАК ПунктУбытия,
	|		НулевойПробег КАК НулевойПробег,
	|		ПРЕДСТАВЛЕНИЕ(УТЗ_ПЛ_ПутевойЛист.Маршрут.Прицеп.Модель) КАК МаркаМодельПрицепа,
	|		Прицеп.ГосНомер КАК ПрицепГосНомер,
	|		Прицеп.ГаражныйНомер КАК ПрицепГаражныйНомер
	|	) КАК Маршрут
	|ИЗ
	|	Документ.УТЗ_ПЛ_ПутевойЛист КАК УТЗ_ПЛ_ПутевойЛист
	|ГДЕ
	|	УТЗ_ПЛ_ПутевойЛист.Ссылка В(&МассивДокументов)";

	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);

	Возврат Запрос.Выполнить().Выбрать();

КонецФункции

Процедура ВывестиЛицевуюЧастьГрузовогоПутевогоЛиста(ДанныеДокументов, ТабДок, Макет, РасчетныеПараметры)

	РасчетныеПараметры = Новый Структура();
	РасчетныеПараметры.Вставить("СрокДействия", "");
	РасчетныеПараметры.Вставить("АдресОрганизации", АдресОрганизации(ДанныеДокументов.ОрганизацияСсылка));
	РасчетныеПараметры.Вставить("СерияВУ", "");
	РасчетныеПараметры.Вставить("НомерВУ", "");
	РасчетныеПараметры.Вставить("КатегорииВУ", "");
	РасчетныеПараметры.Вставить("МаркаМодельПрицепа", "");
	РасчетныеПараметры.Вставить("МаркаМодельАвтомобиля", ДанныеДокументов.ТипАвтотранспорта + " "
		+ ДанныеДокументов.МаркаМодельАвтомобиля);
	РасчетныеПараметры.Вставить("ПрицепГосномер", "");
	РасчетныеПараметры.Вставить("ПрицепГаражныйНомер", "");
	РасчетныеПараметры.Вставить("ВРаспоряжение", ДанныеДокументов.Организация);
	РасчетныеПараметры.Вставить("НомерПутевогоЛиста", "");
	РасчетныеПараметры.Вставить("ДатаПутевогоЛиста", "");
	РасчетныеПараметры.Вставить("ПервыйЗаказчик", "");

	НомерНаПечать = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер, Истина, Истина); //Номер, удалить префикс ИБ, удалить пользовательский префикс
	РасчетныеПараметры.НомерПутевогоЛиста = СтрШаблон("№%1", НомерНаПечать);
	
	// Формат устанавливается явно, а не в палитре свойств табличного документа потому
	// что в теле табличного документа помимо полей-параметров есть поля-шаблоны, использующие параметр ДатаПутевогоЛиста (Сине-Никольский А.А.)
	РасчетныеПараметры.ДатаПутевогоЛиста = Формат(ДанныеДокументов.Дата, "ДФ=dd.MM.yyyy");

	ДатаУбытия = НачалоДня(ДанныеДокументов.ДатаВремяУбытия);
	ДатаПрибытия = НачалоДня(ДанныеДокументов.ДатаВремяПрибытия);

	Если Не ЗначениеЗаполнено(ДатаПрибытия) Или ДатаУбытия = ДатаПрибытия Тогда
		РасчетныеПараметры.СрокДействия = "в течение " + Формат(ДатаУбытия, "ДФ=dd.MM.yyyy");
	ИначеЕсли ДатаУбытия < ДатаПрибытия Тогда
		РасчетныеПараметры.СрокДействия = СтрШаблон("с %1 по %2", Формат(ДатаУбытия, "ДФ=dd.MM.yyyy"), Формат(
			ДатаПрибытия, "ДФ=dd.MM.yyyy"));
	КонецЕсли;

	ДанныеВУ = ДанныеВУВодителя(ДанныеДокументов.Водитель, ДанныеДокументов.Дата);
	ЗаполнитьЗначенияСвойств(РасчетныеПараметры, ДанныеВУ);

	ВыборкаМаршрут = ДанныеДокументов.Маршрут.Выбрать();

	Пока ВыборкаМаршрут.Следующий() Цикл

		Если ВыборкаМаршрут.НулевойПробег Тогда
			Продолжить;
		КонецЕсли;

		Если ЗначениеЗаполнено(ВыборкаМаршрут.Прицеп) И Не ЗначениеЗаполнено(РасчетныеПараметры.МаркаМодельПрицепа) Тогда
			РасчетныеПараметры.МаркаМодельПрицепа = ВыборкаМаршрут.МаркаМодельПрицепа;
			РасчетныеПараметры.ПрицепГосНомер = ВыборкаМаршрут.ПрицепГосНомер;
			РасчетныеПараметры.ПрицепГаражныйНомер = ВыборкаМаршрут.ПрицепГаражныйНомер;
		КонецЕсли
		;

		Если ЗначениеЗаполнено(ВыборкаМаршрут.ПодразделениеЗаявитель) И Не ЗначениеЗаполнено(
			РасчетныеПараметры.ПервыйЗаказчик) Тогда
			РасчетныеПараметры.ПервыйЗаказчик  = ДанныеДокументов.Организация + ", "
				+ ВыборкаМаршрут.ПодразделениеЗаявитель;
		КонецЕсли;

		Прервать;

	КонецЦикла;

	Область = Макет.ПолучитьОбласть("Лицевая");
	Область.Параметры.Заполнить(ДанныеДокументов);
	Область.Параметры.Заполнить(РасчетныеПараметры);

	ТабДок.Вывести(Область);

КонецПроцедуры

Процедура ВывестиОборотнуюЧастьГрузовогоПутевогоЛиста(ДанныеДокументов, ТабДок, Макет, РасчетныеПараметры)

	Область = Макет.ПолучитьОбласть("Оборотная");
	Область.Параметры.Заполнить(ДанныеДокументов);
	Область.Параметры.Заполнить(РасчетныеПараметры); // рассчитаны при формировании лицевой стороны

	ТабДок.Вывести(Область);

КонецПроцедуры

#КонецОбласти

Функция ДанныеВУВодителя(Водитель, ДатаДокумента)

	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УТЗ_ПЛ_ДокументыВодителейСрезПоследних.Серия КАК СерияВУ,
	|	УТЗ_ПЛ_ДокументыВодителейСрезПоследних.Номер КАК НомерВУ,
	|	УТЗ_ПЛ_ДокументыВодителейСрезПоследних.Категории КАК КатегорииВУ
	|ИЗ
	|	РегистрСведений.УТЗ_ПЛ_ДокументыВодителей.СрезПоследних(
	|			&ДатаДокумента,
	|			Водитель = &Водитель
	|				И ВидДокумента = &ВидДокумента) КАК УТЗ_ПЛ_ДокументыВодителейСрезПоследних";
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("Водитель", Водитель);
	Запрос.УстановитьПараметр("ВидДокумента", Перечисления.УТЗ_ПЛ_ВидыДокументовВодителя.ВодительскоеУдостоверение);

	СтруктураОтвета = Новый Структура();
	СтруктураОтвета.Вставить("СерияВУ", "");
	СтруктураОтвета.Вставить("НомерВУ", "");
	СтруктураОтвета.Вставить("КатегорииВУ", "");

	Результат = Запрос.Выполнить();

	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(СтруктураОтвета, Выборка);
	КонецЕсли;

	Возврат СтруктураОтвета;

КонецФункции

Функция АдресОрганизации(Организация, ДатаАктуальности = Неопределено)

	Если Не ЗначениеЗаполнено(ДатаАктуальности) Тогда
		ДатаАктуальности = ТекущаяДатаСеанса();
	КонецЕсли;

	ЗначениеВМассиве = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Организация);
	Отбор = УправлениеКонтактнойИнформацией.ОтборКонтактнойИнформации();
	Отбор.Дата = ДатаАктуальности;
	АдресаОрганизаций = УправлениеКонтактнойИнформацией.КонтактнаяИнформация(ЗначениеВМассиве, Отбор);

	АдресОрганизации = "";

	Если АдресаОрганизаций.Количество() <> 0 Тогда
		Строка = АдресаОрганизаций.Получить(0);
		АдресОрганизации = Строка.Представление;
	КонецЕсли;

	Возврат АдресОрганизации;

КонецФункции

#КонецОбласти

#КонецЕсли